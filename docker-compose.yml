# version: '3.8'


services:

  postgres:
    image: postgres:latest
    container_name: postgres-db
    ports:
      - "5432:5432"
    volumes:
      - ./database:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: rootpassword

  springboot:
    build:
      context: ./backend/springboot
    container_name: springboot-app
    ports:
      - "8085:8085"
    volumes:
      - ./backend/springboot:/app
      - /app/build
    environment:
      - GRADLE_USER_HOME=/app/.gradle
      - GRADLE_OPTS=-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true
      - SPRING_DEVTOOLS_REMOTE_SECRET=secret



# # OKKKKKKKKKKKKK
  # angular:
  #   build:
  #     context: ./frontend/angular
  #   container_name: angular-app
  #   ports:
  #     - "4200:4200"
  #   volumes:
  #     - ./frontend/angular:/app
  #     - /app/node_modules
  #   environment:
  #     NODE_ENV: development

# # OKKKKKKKKKKKKK
#   next:
#     build:
#       context: ./fullstack/next
#     container_name: next-app
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./fullstack/next:/app
#       - /app/node_modules
#     environment:
#       NODE_ENV: development
#       WATCHPACK_POLLING: "true"
#       CHOKIDAR_USEPOLLING: "true"

  # # OKKKKKKKKKKKKK
  # express:
  #   build:
  #     context: ./backend/express
  #   container_name: express-app
  #   ports:
  #     - "4000:4000"
  #   volumes:
  #     - ./backend/express:/app
  #     - /app/node_modules
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true # Necesario para live reload en Docker



